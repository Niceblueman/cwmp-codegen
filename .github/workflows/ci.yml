name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Check code formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "The following files are not formatted properly:"
            gofmt -l .
            exit 1
          fi

      - name: Run tests
        run: go test -v ./...

      - name: Run integration tests
        run: go test -v ./... -tags=integration

  build:
    name: Build
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: cwmp-converter-linux
            asset_name: cwmp-converter-linux-amd64
          - os: windows-latest
            artifact_name: cwmp-converter-windows.exe
            asset_name: cwmp-converter-windows-amd64.exe
          - os: macos-latest
            artifact_name: cwmp-converter-macos
            asset_name: cwmp-converter-macos-amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Build
        run: go build -v -o ${{ matrix.artifact_name }} ./cmd/cwmp-converter

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
          retention-days: 5

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            cwmp-converter-linux-amd64/cwmp-converter-linux
            cwmp-converter-windows-amd64.exe/cwmp-converter-windows.exe
            cwmp-converter-macos-amd64/cwmp-converter-macos
          draft: false
          prerelease: false
          generate_release_notes: true